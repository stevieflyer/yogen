Dart, a type-safe general-purpose programming language designed for building fast apps on multiple platforms. It was developed by Google and first appeared in 2011, and was intended to be an alternative to JavaScript by shipping its own virtual machine to run apps in the browser. But things got off to a rocky start and it was never really embraced by the web development community. However, it bounced back in a big way after being adopted by the Flutter framework, and today it's one of the most loved programming languages in the industry.

The most loved programming languages in the industry. It's unique for its ability to compile to multiple targets like ARM and x64 machine code for mobile devices, JavaScript for web browsers, and self-contained executables for Windows, Mac OS, and Linux. It also has a just-in-time or JIT compiler, which compiles your source code to machine code on the fly, which can boost developer productivity with features like hot reload and Flutter. All Dart code runs inside of an isolate, which is like a chunk of memory running a single-threaded event loop.

This makes it possible to perform/isolate, which is like a chunk of memory, running a single threaded event loop. This makes it possible to perform asynchronous background work on a single thread. But you can also spawn multiple isolates to run code in parallel. The language itself is type safe, which means that a variable's value always matches its static type, and that generally results in fewer runtime errors for your app in production.

However, the type system is flexible, allowing you to use dynamic types and runtime checks where required. It also provides null safety, which means that values can't be null unless you explicitly allow them to be, which can further cut down runtime exceptions. Syntactically, it's often described as combining elements of Java and JavaScript. A Dart program always starts with a main function that has no return value, so it's annotated with the void type. Inside of it, we might declare a variable with var and set it equal to a string. Dart will automatically infer this as a string type. However, we could explicitly type it by replacing var.

Anything you can store in a variable is a string type. However, we could explicitly type it by replacing var. Anything you can store in a variable is an object, and every object is an instance of a class. The only thing that's not an object in Dart is null.

This opens the door to multiple programming paradigms. Functions are also first-class objects, which means they can be passed around for functional programming. Or you can define classes with mixin-based inheritance for object-oriented patterns.

On top of that, it has a package manager called pub, providing thousands of open source packages to help you get things done. This has been dart in 100 seconds. Hit the like button and subscribe if you want to see more short videos like this. And if you want to get really good at dart, I just released a brand new full course for pro members. It teaches the fundamentals of dart from the ground up to get you ready for flutter development and my upcoming flutter 2 course which will be out later this year.

.